# on manual trigger, build frontend using vite and create a release
name: Frontend Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Frontend Version to release'
        required: true



jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install --legacy-peer-deps
      working-directory: ./frontend/

    - name: Build with Vite
      run: npx vite build
      working-directory: ./frontend/

    - name: Archive artifacts
      run: tar -czvf frontend.tar.gz dist/
      working-directory: ./frontend/src/

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: frontend/src/frontend.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:

    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}-frontend
        release_name: v${{ github.event.inputs.version }}-frontend
        draft: true
        prerelease: false

    - name: Upload dist tar as a release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: frontend.tar.gz
        asset_name: frontend.tar.gz
        asset_content_type: application/gzip

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend
        path: 
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: silvercryptor
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./backend/nginx/Dockerfile.nginx
        file: ./backend/nginx/Dockerfile.nginx
        push: true
        tags: silvercryptor/quantumania-nginx:${{ github.event.inputs.version }}