{
  "version": 3,
  "sources": ["../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/services/uuid.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/services/constant.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/services/report.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/services/task.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/services/base.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/js.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/promise.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/ajax.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/resource.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/vue.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/errors/frames.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/performance/perf.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/performance/fmp.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/performance/index.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/node_modules/js-base64/base64.mjs", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/trace/interceptors/xhr.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/trace/interceptors/fetch.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/trace/segment.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/monitor.ts", "../../skywalking-client-js/lib/webpack:/skywalking-client-js/src/index.ts", "../../skywalking-client-js/index.js"],
  "sourcesContent": ["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    /* tslint:disable */\n    const r = (Math.random() * 16) | 0;\n    /* tslint:disable */\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n\n    return v.toString(16);\n  });\n}\n", "import Report from './report';\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum ErrorsCategory {\n  AJAX_ERROR = 'ajax',\n  RESOURCE_ERROR = 'resource',\n  VUE_ERROR = 'vue',\n  PROMISE_ERROR = 'promise',\n  JS_ERROR = 'js',\n  UNKNOWN_ERROR = 'unknown',\n}\nexport enum GradeTypeEnum {\n  INFO = 'Info',\n  WARNING = 'Warning',\n  ERROR = 'Error',\n}\nexport enum ReportTypes {\n  ERROR = '/browser/errorLog',\n  ERRORS = '/browser/errorLogs',\n  PERF = '/browser/perfData',\n  SEGMENT = '/v3/segment',\n  SEGMENTS = '/v3/segments',\n}\n\nexport const SpanLayer = 'Http';\nexport const SpanType = 'Exit';\n\nexport enum ReadyStatus {\n  OPENED = 1,\n  DONE = 4,\n}\nexport const ComponentId = 10001; // ajax\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ReportTypes } from './constant';\nclass Report {\n  private url: string = '';\n\n  constructor(type: string, collector: string) {\n    if (type === 'ERROR') {\n      this.url = collector + ReportTypes.ERROR;\n    } else if (type === 'ERRORS') {\n      this.url = collector + ReportTypes.ERRORS;\n    } else if (type === 'SEGMENT') {\n      this.url = collector + ReportTypes.SEGMENT;\n    } else if (type === 'SEGMENTS') {\n      this.url = collector + ReportTypes.SEGMENTS;\n    } else if (type === 'PERF') {\n      this.url = collector + ReportTypes.PERF;\n    }\n  }\n\n  public sendByFetch(data: any) {\n    delete data.collector;\n    if (!this.url) {\n      return;\n    }\n    const sendRequest = new Request(this.url, { method: 'POST', body: JSON.stringify(data) });\n\n    fetch(sendRequest)\n      .then((response) => {\n        if (response.status >= 400 || response.status === 0) {\n          throw new Error('Something went wrong on api server!');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  public sendByXhr(data: any) {\n    if (!this.url) {\n      return;\n    }\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('post', this.url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status < 400) {\n        console.log('Report successfully');\n      }\n    };\n    xhr.send(JSON.stringify(data));\n  }\n\n  public sendByBeacon(data: any) {\n    if (!this.url) {\n      return;\n    }\n    if (typeof navigator.sendBeacon === 'function') {\n      navigator.sendBeacon(this.url, JSON.stringify(data));\n      return;\n    }\n\n    this.sendByXhr(data);\n  }\n}\nexport default Report;\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ErrorInfoFields, ReportFields } from './types';\nimport Report from './report';\n\nclass TaskQueue {\n  private queues: ((ErrorInfoFields & ReportFields) | undefined)[] = [];\n  private collector: string = '';\n\n  public addTask(data: ErrorInfoFields & ReportFields, collector: string) {\n    this.queues.push(data);\n    this.collector = collector;\n  }\n\n  public fireTasks() {\n    if (!(this.queues && this.queues.length)) {\n      return;\n    }\n\n    new Report('ERRORS', this.collector).sendByXhr(this.queues);\n    this.queues = [];\n  }\n\n  public finallyFireTasks() {\n    window.addEventListener('beforeunload', () => {\n      if (!this.queues.length) {\n        return;\n      }\n      new Report('ERRORS', this.collector).sendByBeacon(this.queues);\n    });\n  }\n}\n\nexport default new TaskQueue();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Task from './task';\nimport { ErrorsCategory, GradeTypeEnum } from './constant';\nimport { ErrorInfoFields, ReportFields } from './types';\n\nlet pageHasjsError: { [key: string]: boolean } = {};\nlet interval: NodeJS.Timeout;\nexport default class Base {\n  public logInfo: ErrorInfoFields & ReportFields & { collector: string } = {\n    uniqueId: '',\n    service: '',\n    serviceVersion: '',\n    pagePath: '',\n    category: ErrorsCategory.UNKNOWN_ERROR,\n    grade: GradeTypeEnum.INFO,\n    errorUrl: '',\n    line: 0,\n    col: 0,\n    message: '',\n    firstReportedError: false,\n    collector: '',\n  };\n\n  public traceInfo(logInfo?: ErrorInfoFields & ReportFields & { collector: string }) {\n    this.logInfo = logInfo || this.logInfo;\n    const ExcludeErrorTypes: string[] = [\n      ErrorsCategory.AJAX_ERROR,\n      ErrorsCategory.RESOURCE_ERROR,\n      ErrorsCategory.UNKNOWN_ERROR,\n    ];\n    // mark js error pv\n    if (!pageHasjsError[location.href] && !ExcludeErrorTypes.includes(this.logInfo.category)) {\n      pageHasjsError = {\n        [location.href]: true,\n      };\n      this.logInfo.firstReportedError = true;\n    }\n    const collector = this.logInfo.collector;\n\n    delete this.logInfo.collector;\n    Task.addTask(this.logInfo, collector);\n    Task.finallyFireTasks();\n    if (interval) {\n      return;\n    }\n    // report errors within 1min\n    interval = setInterval(() => {\n      Task.fireTasks();\n    }, 60000);\n  }\n}\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory } from '../services/constant';\nimport { CustomReportOptions } from '../types';\nclass JSErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  public handleErrors(options: CustomReportOptions) {\n    this.infoOpt = options;\n    window.onerror = (message, url, line, col, error) => {\n      this.logInfo = {\n        ...this.infoOpt,\n        uniqueId: uuid(),\n        category: ErrorsCategory.JS_ERROR,\n        grade: GradeTypeEnum.ERROR,\n        errorUrl: url,\n        line,\n        col,\n        message,\n        collector: options.collector,\n        stack: error ? error.stack : '',\n      };\n      this.traceInfo();\n    };\n  }\n  setOptions(opt: CustomReportOptions) {\n    this.infoOpt = opt;\n  }\n}\nexport default new JSErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory } from '../services/constant';\nimport { CustomReportOptions } from '../types';\n\nclass PromiseErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  public handleErrors(options: CustomReportOptions) {\n    this.infoOpt = options;\n    window.addEventListener('unhandledrejection', (event) => {\n      try {\n        let url = '';\n        if (!event || !event.reason) {\n          return;\n        }\n        if (event.reason.config && event.reason.config.url) {\n          url = event.reason.config.url;\n        }\n        this.logInfo = {\n          ...this.infoOpt,\n          uniqueId: uuid(),\n          category: ErrorsCategory.PROMISE_ERROR,\n          grade: GradeTypeEnum.ERROR,\n          errorUrl: url || location.href,\n          message: event.reason.message,\n          stack: event.reason.stack,\n          collector: options.collector,\n        };\n\n        this.traceInfo();\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n  setOptions(opt: CustomReportOptions) {\n    this.infoOpt = opt;\n  }\n}\nexport default new PromiseErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory, ReportTypes } from '../services/constant';\nimport { CustomReportOptions } from '../types';\n\nclass AjaxErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  // get http error info\n  public handleError(options: CustomReportOptions) {\n    // XMLHttpRequest Object\n    if (!window.XMLHttpRequest) {\n      return;\n    }\n    this.infoOpt = options;\n    window.addEventListener(\n      'xhrReadyStateChange',\n      (event: CustomEvent<XMLHttpRequest & { getRequestConfig: any[] }>) => {\n        const detail = event.detail;\n\n        if (detail.readyState !== 4) {\n          return;\n        }\n        if (detail.getRequestConfig[1] === options.collector + ReportTypes.ERRORS) {\n          return;\n        }\n        if (detail.status !== 0 && detail.status < 400) {\n          return;\n        }\n\n        this.logInfo = {\n          ...this.infoOpt,\n          uniqueId: uuid(),\n          category: ErrorsCategory.AJAX_ERROR,\n          grade: GradeTypeEnum.ERROR,\n          errorUrl: detail.getRequestConfig[1],\n          message: `status: ${detail.status}; statusText: ${detail.statusText};`,\n          collector: options.collector,\n          stack: detail.responseText,\n        };\n        this.traceInfo();\n      },\n    );\n  }\n  setOptions(opt: CustomReportOptions) {\n    this.infoOpt = opt;\n  }\n}\n\nexport default new AjaxErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory } from '../services/constant';\nimport { CustomReportOptions } from '../types';\n\nclass ResourceErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  public handleErrors(options: CustomReportOptions) {\n    this.infoOpt = options;\n    window.addEventListener('error', (event) => {\n      try {\n        if (!event) {\n          return;\n        }\n        const target: any = event.target;\n        const isElementTarget =\n          target instanceof HTMLScriptElement ||\n          target instanceof HTMLLinkElement ||\n          target instanceof HTMLImageElement;\n\n        if (!isElementTarget) {\n          // return js error\n          return;\n        }\n        this.logInfo = {\n          ...this.infoOpt,\n          uniqueId: uuid(),\n          category: ErrorsCategory.RESOURCE_ERROR,\n          grade: target.tagName === 'IMG' ? GradeTypeEnum.WARNING : GradeTypeEnum.ERROR,\n          errorUrl: (target as HTMLScriptElement).src || (target as HTMLLinkElement).href || location.href,\n          message: `load ${target.tagName} resource error`,\n          collector: options.collector,\n          stack: `load ${target.tagName} resource error`,\n        };\n        this.traceInfo();\n      } catch (error) {\n        throw error;\n      }\n    });\n  }\n  setOptions(opt: CustomReportOptions) {\n    this.infoOpt = opt;\n  }\n}\nexport default new ResourceErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory } from '../services/constant';\nimport { CustomReportOptions } from '../types';\n\nclass VueErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  public handleErrors(options: CustomReportOptions, Vue: any) {\n    this.infoOpt = options;\n    if (!(Vue && Vue.config)) {\n      return;\n    }\n    Vue.config.errorHandler = (error: Error, vm: any, info: string) => {\n      try {\n        this.logInfo = {\n          ...this.infoOpt,\n          uniqueId: uuid(),\n          category: ErrorsCategory.VUE_ERROR,\n          grade: GradeTypeEnum.ERROR,\n          errorUrl: location.href,\n          message: info,\n          collector: options.collector,\n          stack: error.stack,\n        };\n        this.traceInfo();\n      } catch (error) {\n        throw error;\n      }\n    };\n  }\n  setOptions(opt: CustomReportOptions) {\n    this.infoOpt = opt;\n  }\n}\n\nexport default new VueErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport uuid from '../services/uuid';\nimport Base from '../services/base';\nimport { GradeTypeEnum, ErrorsCategory } from '../services/constant';\nimport { CustomReportOptions } from '../types';\n\nclass FrameErrors extends Base {\n  private infoOpt: CustomReportOptions = {\n    service: '',\n    pagePath: '',\n    serviceVersion: '',\n  };\n  public handleErrors(options: CustomReportOptions, error: Error) {\n    this.infoOpt = options;\n    this.logInfo = {\n      ...this.infoOpt,\n      uniqueId: uuid(),\n      category: ErrorsCategory.JS_ERROR,\n      grade: GradeTypeEnum.ERROR,\n      errorUrl: error.name || location.href,\n      message: error.message,\n      collector: options.collector || location.origin,\n      stack: error.stack,\n    };\n    this.traceInfo();\n  }\n}\nexport default new FrameErrors();\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IPerfDetail } from './type';\nclass PagePerf {\n  public getPerfTiming(): IPerfDetail {\n    try {\n      let { timing } = window.performance as PerformanceNavigationTiming | any; // PerformanceTiming\n      if (typeof window.PerformanceNavigationTiming === 'function') {\n        const nt2Timing = performance.getEntriesByType('navigation')[0];\n\n        if (nt2Timing) {\n          timing = nt2Timing;\n        }\n      }\n      let redirectTime = 0;\n\n      if (timing.navigationStart !== undefined) {\n        redirectTime = parseInt(String(timing.fetchStart - timing.navigationStart), 10);\n      } else if (timing.redirectEnd !== undefined) {\n        redirectTime = parseInt(String(timing.redirectEnd - timing.redirectStart), 10);\n      } else {\n        redirectTime = 0;\n      }\n\n      return {\n        redirectTime,\n        dnsTime: parseInt(String(timing.domainLookupEnd - timing.domainLookupStart), 10),\n        ttfbTime: parseInt(String(timing.responseStart - timing.requestStart), 10), // Time to First Byte\n        tcpTime: parseInt(String(timing.connectEnd - timing.connectStart), 10),\n        transTime: parseInt(String(timing.responseEnd - timing.responseStart), 10),\n        domAnalysisTime: parseInt(String(timing.domInteractive - timing.responseEnd), 10),\n        fptTime: parseInt(String(timing.responseEnd - timing.fetchStart), 10), // First Paint Time or Blank Screen Time\n        domReadyTime: parseInt(String(timing.domContentLoadedEventEnd - timing.fetchStart), 10),\n        loadPageTime: parseInt(String(timing.loadEventStart - timing.fetchStart), 10), // Page full load time\n        // Synchronous load resources in the page\n        resTime: parseInt(String(timing.loadEventStart - timing.domContentLoadedEventEnd), 10),\n        // Only valid for HTTPS\n        sslTime:\n          location.protocol === 'https:' && timing.secureConnectionStart > 0\n            ? parseInt(String(timing.connectEnd - timing.secureConnectionStart), 10)\n            : undefined,\n        ttlTime: parseInt(String(timing.domInteractive - timing.fetchStart), 10), // time to interact\n        firstPackTime: parseInt(String(timing.responseStart - timing.domainLookupStart), 10), // first pack time\n        fmpTime: 0, // First Meaningful Paint\n      };\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default PagePerf;\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ICalScore, ElementList } from './type';\n\nconst getStyle = (element: Element | any, attr: any) => {\n  if (window.getComputedStyle) {\n    return window.getComputedStyle(element, null)[attr];\n  } else {\n    return element.currentStyle[attr];\n  }\n};\n// element weight for calculate score\nenum ELE_WEIGHT {\n  SVG = 2,\n  IMG = 2,\n  CANVAS = 4,\n  OBJECT = 4,\n  EMBED = 4,\n  VIDEO = 4,\n}\n\nconst START_TIME: number = performance.now();\nconst IGNORE_TAG_SET: string[] = ['SCRIPT', 'STYLE', 'META', 'HEAD', 'LINK'];\nconst LIMIT: number = 3000;\nconst WW: number = window.innerWidth;\nconst WH: number = window.innerHeight;\nconst DELAY: number = 2000; // fmp retry interval\n\nclass FMPTiming {\n  public fmpTime: number = 0;\n  private statusCollector: Array<{ time: number }> = []; // nodes change time\n  private flag: boolean = true;\n  private observer: MutationObserver = null;\n  private callbackCount: number = 0;\n  private entries: any = {};\n\n  constructor() {\n    if (!performance || !performance.getEntries) {\n      console.log('your browser do not support performance.getEntries');\n      return;\n    }\n    this.initObserver();\n  }\n  private getFirstSnapShot() {\n    const time: number = performance.now();\n    const $body: HTMLElement = document.body;\n    if ($body) {\n      this.setTag($body, this.callbackCount);\n    }\n    this.statusCollector.push({\n      time,\n    });\n  }\n  private initObserver() {\n    this.getFirstSnapShot();\n    this.observer = new MutationObserver(() => {\n      this.callbackCount += 1;\n      const time = performance.now();\n      const $body: HTMLElement = document.body;\n      if ($body) {\n        this.setTag($body, this.callbackCount);\n      }\n      this.statusCollector.push({\n        time,\n      });\n    });\n    // observe all child nodes\n    this.observer.observe(document, {\n      childList: true,\n      subtree: true,\n    });\n    this.calculateFinalScore();\n  }\n  private calculateFinalScore() {\n    if (!this.flag) {\n      return;\n    }\n    if (!MutationObserver) {\n      return;\n    }\n    if (this.checkNeedCancel(START_TIME)) {\n      // cancel observer for dom change\n      this.observer.disconnect();\n      this.flag = false;\n      const res = this.getTreeScore(document.body);\n      let tp: ICalScore = null;\n      for (const item of res.dpss) {\n        if (tp && tp.st) {\n          if (tp.st < item.st) {\n            tp = item;\n          }\n        } else {\n          tp = item;\n        }\n      }\n      // Get all of soures load time\n      performance.getEntries().forEach((item: PerformanceResourceTiming) => {\n        this.entries[item.name] = item.responseEnd;\n      });\n      if (!tp) {\n        return false;\n      }\n      const resultEls: ElementList = this.filterResult(tp.els);\n      const fmpTiming: number = this.getFmpTime(resultEls);\n      this.fmpTime = fmpTiming;\n    } else {\n      setTimeout(() => {\n        this.calculateFinalScore();\n      }, DELAY);\n    }\n  }\n  private getFmpTime(resultEls: ElementList): number {\n    let rt = 0;\n    for (const item of resultEls) {\n      let time: number = 0;\n      if (item.weight === 1) {\n        const index: number = parseInt(item.ele.getAttribute('fmp_c'), 10);\n        time = this.statusCollector[index] && this.statusCollector[index].time;\n      } else if (item.weight === 2) {\n        if (item.ele.tagName === 'IMG') {\n          time = this.entries[(item.ele as HTMLImageElement).src];\n        } else if (item.ele.tagName === 'SVG') {\n          const index: number = parseInt(item.ele.getAttribute('fmp_c'), 10);\n          time = this.statusCollector[index] && this.statusCollector[index].time;\n        } else {\n          const match = getStyle(item.ele, 'background-image').match(/url\\(\\\"(.*?)\\\"\\)/);\n          let url: string = '';\n          if (match && match[1]) {\n            url = match[1];\n          }\n          if (!url.includes('http')) {\n            url = location.protocol + match[1];\n          }\n          time = this.entries[url];\n        }\n      } else if (item.weight === 4) {\n        if (item.ele.tagName === 'CANVAS') {\n          const index: number = parseInt(item.ele.getAttribute('fmp_c'), 10);\n          time = this.statusCollector[index] && this.statusCollector[index].time;\n        } else if (item.ele.tagName === 'VIDEO') {\n          time = this.entries[(item.ele as HTMLVideoElement).src];\n          if (!time) {\n            time = this.entries[(item.ele as HTMLVideoElement).poster];\n          }\n        }\n      }\n      if (typeof time !== 'number') {\n        time = 0;\n      }\n      if (rt < time) {\n        rt = time;\n      }\n    }\n    return rt;\n  }\n  /**\n   * The nodes with the highest score in the visible area are collected and the average value is taken,\n   * and the low score ones are eliminated\n   */\n  private filterResult(els: ElementList): ElementList {\n    if (els.length === 1) {\n      return els;\n    }\n    let sum: number = 0;\n    els.forEach((item: any) => {\n      sum += item.st;\n    });\n    const avg: number = sum / els.length;\n    return els.filter((item: any) => {\n      return item.st > avg;\n    });\n  }\n  private checkNeedCancel(start: number): boolean {\n    const time: number = performance.now() - start;\n    const lastCalTime: number =\n      this.statusCollector.length > 0 ? this.statusCollector[this.statusCollector.length - 1].time : 0;\n    return time > LIMIT || time - lastCalTime > 1000;\n  }\n  private getTreeScore(node: Element): ICalScore | any {\n    if (!node) {\n      return {};\n    }\n    const dpss = [];\n    const children: any = node.children;\n    for (const child of children) {\n      // Only calculate marked elements\n      if (!child.getAttribute('fmp_c')) {\n        continue;\n      }\n      const s = this.getTreeScore(child);\n      if (s.st) {\n        dpss.push(s);\n      }\n    }\n\n    return this.calcaulteGrades(node, dpss);\n  }\n  private calcaulteGrades(ele: Element, dpss: ICalScore[]): ICalScore {\n    const { width, height, left, top } = ele.getBoundingClientRect();\n    let isInViewPort: boolean = true;\n    if (WH < top || WW < left) {\n      isInViewPort = false;\n    }\n    let sdp: number = 0;\n    dpss.forEach((item: any) => {\n      sdp += item.st;\n    });\n    let weight: number = Number(ELE_WEIGHT[ele.tagName as any]) || 1;\n    // If there is a common element of the background image, it is calculated according to the picture\n    if (\n      weight === 1 &&\n      getStyle(ele, 'background-image') &&\n      getStyle(ele, 'background-image') !== 'initial' &&\n      getStyle(ele, 'background-image') !== 'none'\n    ) {\n      weight = ELE_WEIGHT.IMG;\n    }\n    // score = the area of element\n    let st: number = isInViewPort ? width * height * weight : 0;\n    let els = [{ ele, st, weight }];\n    const root = ele;\n    // The percentage of the current element in the viewport\n    const areaPercent = this.calculateAreaParent(ele);\n    // If the sum of the child's weights is greater than the parent's true weight\n    if (sdp > st * areaPercent || areaPercent === 0) {\n      st = sdp;\n      els = [];\n      for (const item of dpss) {\n        els = els.concat(item.els);\n      }\n    }\n    return {\n      dpss,\n      st,\n      els,\n      root,\n    };\n  }\n  private calculateAreaParent(ele: Element): number {\n    const { left, right, top, bottom, width, height } = ele.getBoundingClientRect();\n    const winLeft: number = 0;\n    const winTop: number = 0;\n    const winRight: number = WW;\n    const winBottom: number = WH;\n    const overlapX = right - left + (winRight - winLeft) - (Math.max(right, winRight) - Math.min(left, winLeft));\n    const overlapY = bottom - top + (winBottom - winTop) - (Math.max(bottom, winBottom) - Math.min(top, winTop));\n\n    if (overlapX <= 0 || overlapY <= 0) {\n      return 0;\n    }\n    return (overlapX * overlapY) / (width * height);\n  }\n  // Depth first traversal to mark nodes\n  private setTag(target: Element, callbackCount: number): void {\n    const tagName: string = target.tagName;\n    if (IGNORE_TAG_SET.indexOf(tagName) === -1) {\n      const $children: HTMLCollection = target.children;\n      if ($children && $children.length > 0) {\n        for (let i = $children.length - 1; i >= 0; i--) {\n          const $child: Element = $children[i];\n          const hasSetTag = $child.getAttribute('fmp_c') !== null;\n          // If it is not marked, whether the marking condition is met is detected\n          if (!hasSetTag) {\n            const { left, top, width, height } = $child.getBoundingClientRect();\n            if (WH < top || WW < left || width === 0 || height === 0) {\n              continue;\n            }\n            $child.setAttribute('fmp_c', `${callbackCount}`);\n          }\n          this.setTag($child, callbackCount);\n        }\n      }\n    }\n  }\n}\n\nexport default FMPTiming;\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CustomOptionsType } from '../types';\nimport Report from '../services/report';\nimport pagePerf from './perf';\nimport FMP from './fmp';\nimport { IPerfDetail } from './type';\n\nclass TracePerf {\n  private perfConfig = {\n    perfDetail: {},\n  } as { perfDetail: IPerfDetail };\n\n  public getPerf(options: CustomOptionsType) {\n    this.recordPerf(options);\n    if (options.enableSPA) {\n      // hash router\n      window.addEventListener(\n        'hashchange',\n        () => {\n          this.recordPerf(options);\n        },\n        false,\n      );\n    }\n  }\n\n  public async recordPerf(options: CustomOptionsType) {\n    let fmp: { fmpTime: number | undefined } = { fmpTime: undefined };\n    if (options.autoTracePerf && options.useFmp) {\n      fmp = await new FMP();\n    }\n    // auto report pv and perf data\n    setTimeout(() => {\n      if (options.autoTracePerf) {\n        this.perfConfig.perfDetail = new pagePerf().getPerfTiming();\n      }\n      const perfDetail = options.autoTracePerf\n        ? {\n            ...this.perfConfig.perfDetail,\n            fmpTime: options.useFmp ? parseInt(String(fmp.fmpTime), 10) : undefined,\n          }\n        : undefined;\n      const perfInfo = {\n        ...perfDetail,\n        pagePath: options.pagePath,\n        serviceVersion: options.serviceVersion,\n        service: options.service,\n      };\n      new Report('PERF', options.collector).sendByXhr(perfInfo);\n      // clear perf data\n      this.clearPerf();\n    }, 6000);\n  }\n\n  private clearPerf() {\n    if (!(window.performance && window.performance.clearResourceTimings)) {\n      return;\n    }\n    window.performance.clearResourceTimings();\n    this.perfConfig = {\n      perfDetail: {},\n    } as { perfDetail: IPerfDetail };\n  }\n}\n\nexport default new TracePerf();\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ComponentId, ReadyStatus, ReportTypes, SpanLayer, SpanType } from '../../services/constant';\nimport uuid from '../../services/uuid';\nimport { encode } from 'js-base64';\nimport { CustomOptionsType } from '../../types';\nimport { SegmentFields, SpanFields } from '../type';\n\nlet customConfig: CustomOptionsType | any = {};\nexport default function xhrInterceptor(options: CustomOptionsType, segments: SegmentFields[]) {\n  setOptions(options);\n  const originalXHR = window.XMLHttpRequest as any;\n  const xhrSend = XMLHttpRequest.prototype.send;\n  const xhrOpen = XMLHttpRequest.prototype.open;\n\n  if (!(xhrSend && xhrOpen)) {\n    console.error('Tracing is not supported');\n    return;\n  }\n  originalXHR.getRequestConfig = [];\n\n  function ajaxEventTrigger(event: string) {\n    const ajaxEvent = new CustomEvent(event, { detail: this });\n\n    window.dispatchEvent(ajaxEvent);\n  }\n\n  function customizedXHR() {\n    const liveXHR = new originalXHR();\n\n    liveXHR.addEventListener(\n      'readystatechange',\n      function () {\n        ajaxEventTrigger.call(this, 'xhrReadyStateChange');\n      },\n      false,\n    );\n\n    liveXHR.open = function (\n      method: string,\n      url: string,\n      async: boolean,\n      username?: string | null,\n      password?: string | null,\n    ) {\n      this.getRequestConfig = arguments;\n\n      return xhrOpen.apply(this, arguments);\n    };\n    liveXHR.send = function (body?: Document | BodyInit | null) {\n      return xhrSend.apply(this, arguments);\n    };\n\n    return liveXHR;\n  }\n\n  (window as any).XMLHttpRequest = customizedXHR;\n\n  const segCollector: { event: XMLHttpRequest; startTime: number; traceId: string; traceSegmentId: string }[] = [];\n\n  window.addEventListener('xhrReadyStateChange', (event: CustomEvent<XMLHttpRequest & { getRequestConfig: any[] }>) => {\n    let segment = {\n      traceId: '',\n      service: customConfig.service,\n      spans: [],\n      serviceInstance: customConfig.serviceVersion,\n      traceSegmentId: '',\n    } as SegmentFields;\n    const xhrState = event.detail.readyState;\n    const config = event.detail.getRequestConfig;\n    let url = {} as URL;\n    if (config[1].startsWith('http://') || config[1].startsWith('https://')) {\n      url = new URL(config[1]);\n    } else if (config[1].startsWith('//')) {\n      url = new URL(`${window.location.protocol}${config[1]}`);\n    } else {\n      url = new URL(window.location.href);\n      url.pathname = config[1];\n    }\n\n    const noTraceOrigins = customConfig.noTraceOrigins.some((rule: string | RegExp) => {\n      if (typeof rule === 'string') {\n        if (rule === url.origin) {\n          return true;\n        }\n      } else if (rule instanceof RegExp) {\n        if (rule.test(url.origin)) {\n          return true;\n        }\n      }\n    });\n    if (noTraceOrigins) {\n      return;\n    }\n\n    const cURL = new URL(customConfig.collector);\n    const pathname = cURL.pathname === '/' ? url.pathname : url.pathname.replace(new RegExp(`^${cURL.pathname}`), '');\n    const internals = [ReportTypes.ERROR, ReportTypes.ERRORS, ReportTypes.PERF, ReportTypes.SEGMENTS] as string[];\n    const isSDKInternal = internals.includes(pathname);\n\n    if (isSDKInternal && !customConfig.traceSDKInternal) {\n      return;\n    }\n\n    // The values of xhrState are from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n    if (xhrState === ReadyStatus.OPENED) {\n      const traceId = uuid();\n      const traceSegmentId = uuid();\n\n      segCollector.push({\n        event: event.detail,\n        startTime: new Date().getTime(),\n        traceId,\n        traceSegmentId,\n      });\n\n      const traceIdStr = String(encode(traceId));\n      const segmentId = String(encode(traceSegmentId));\n      const service = String(encode(segment.service));\n      const instance = String(encode(segment.serviceInstance));\n      const endpoint = String(encode(customConfig.pagePath));\n      const peer = String(encode(url.host));\n      const index = segment.spans.length;\n      const values = `${1}-${traceIdStr}-${segmentId}-${index}-${service}-${instance}-${endpoint}-${peer}`;\n\n      event.detail.setRequestHeader('sw8', values);\n    }\n\n    if (xhrState === ReadyStatus.DONE) {\n      const endTime = new Date().getTime();\n      for (let i = 0; i < segCollector.length; i++) {\n        if (segCollector[i].event.readyState === ReadyStatus.DONE) {\n          let responseURL = {} as URL;\n          if (segCollector[i].event.status) {\n            responseURL = new URL(segCollector[i].event.responseURL);\n          }\n          const tags = [\n            {\n              key: 'http.method',\n              value: config[0],\n            },\n            {\n              key: 'url',\n              value: segCollector[i].event.responseURL || `${url.protocol}//${url.host}${url.pathname}`,\n            },\n          ];\n          const exitSpan: SpanFields = {\n            operationName: customConfig.pagePath,\n            startTime: segCollector[i].startTime,\n            endTime,\n            spanId: segment.spans.length,\n            spanLayer: SpanLayer,\n            spanType: SpanType,\n            isError: event.detail.status === 0 || event.detail.status >= 400, // when requests failed, the status is 0\n            parentSpanId: segment.spans.length - 1,\n            componentId: ComponentId,\n            peer: responseURL.host,\n            tags: customConfig.detailMode\n              ? customConfig.customTags\n                ? [...tags, ...customConfig.customTags]\n                : tags\n              : undefined,\n          };\n          segment = {\n            ...segment,\n            traceId: segCollector[i].traceId,\n            traceSegmentId: segCollector[i].traceSegmentId,\n          };\n          segment.spans.push(exitSpan);\n          segCollector.splice(i, 1);\n        }\n      }\n      segments.push(segment);\n    }\n  });\n}\nexport function setOptions(opt: CustomOptionsType) {\n  customConfig = { ...customConfig, ...opt };\n}\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { encode } from 'js-base64';\nimport uuid from '../../services/uuid';\nimport { SegmentFields, SpanFields } from '../type';\nimport { CustomOptionsType } from '../../types';\nimport Base from '../../services/base';\nimport { ComponentId, ReportTypes, SpanLayer, SpanType, ErrorsCategory, GradeTypeEnum } from '../../services/constant';\nlet customConfig: any = {};\nexport default function windowFetch(options: CustomOptionsType, segments: SegmentFields[]) {\n  const originFetch: any = window.fetch;\n  setFetchOptions(options);\n\n  window.fetch = async (...args: any) => {\n    const startTime = new Date().getTime();\n    const traceId = uuid();\n    const traceSegmentId = uuid();\n    let segment = {\n      traceId: '',\n      service: customConfig.service,\n      spans: [],\n      serviceInstance: customConfig.serviceVersion,\n      traceSegmentId: '',\n    } as SegmentFields;\n    let url = {} as URL;\n    // for args[0] is Request object see: https://developer.mozilla.org/zh-CN/docs/Web/API/fetch\n    if (Object.prototype.toString.call(args[0]) === '[object Request]') {\n      url = new URL(args[0].url);\n    } else {\n      if (args[0].startsWith('http://') || args[0].startsWith('https://')) {\n        url = new URL(args[0]);\n      } else if (args[0].startsWith('//')) {\n        url = new URL(`${window.location.protocol}${args[0]}`);\n      } else {\n        url = new URL(window.location.href);\n        url.pathname = args[0];\n      }\n    }  \n\n\n    const noTraceOrigins = customConfig.noTraceOrigins.some((rule: string | RegExp) => {\n      if (typeof rule === 'string') {\n        if (rule === url.origin) {\n          return true;\n        }\n      } else if (rule instanceof RegExp) {\n        if (rule.test(url.origin)) {\n          return true;\n        }\n      }\n    });\n    const cURL = new URL(customConfig.collector);\n    const pathname = cURL.pathname === '/' ? url.pathname : url.pathname.replace(new RegExp(`^${cURL.pathname}`), '');\n    const internals = [ReportTypes.ERROR, ReportTypes.ERRORS, ReportTypes.PERF, ReportTypes.SEGMENTS] as string[];\n    const isSDKInternal = internals.includes(pathname);\n    const hasTrace = !noTraceOrigins || (isSDKInternal && customConfig.traceSDKInternal);\n\n    if (hasTrace) {\n      const traceIdStr = String(encode(traceId));\n      const segmentId = String(encode(traceSegmentId));\n      const service = String(encode(segment.service));\n      const instance = String(encode(segment.serviceInstance));\n      const endpoint = String(encode(customConfig.pagePath));\n      const peer = String(encode(url.host));\n      const index = segment.spans.length;\n      const values = `${1}-${traceIdStr}-${segmentId}-${index}-${service}-${instance}-${endpoint}-${peer}`;\n\n      if (!args[1]) {\n        args[1] = {};\n      }\n      if (!args[1].headers) {\n        args[1].headers = {};\n      }\n      args[1].headers['sw8'] = values;\n    }\n\n    const response = await originFetch(...args);\n\n    try {\n      if (response && (response.status === 0 || response.status >= 400)) {\n        const logInfo = {\n          uniqueId: uuid(),\n          service: customConfig.service,\n          serviceVersion: customConfig.serviceVersion,\n          pagePath: customConfig.pagePath,\n          category: ErrorsCategory.AJAX_ERROR,\n          grade: GradeTypeEnum.ERROR,\n          errorUrl: (response && response.url) || `${url.protocol}//${url.host}${url.pathname}`,\n          message: `status: ${response ? response.status : 0}; statusText: ${response && response.statusText};`,\n          collector: customConfig.collector,\n          stack: 'Fetch: ' + response && response.statusText,\n        };\n        new Base().traceInfo(logInfo);\n      }\n      if (hasTrace) {\n        const tags = [\n          {\n            key: 'http.method',\n            value: args[1].method || 'GET',\n          },\n          {\n            key: 'url',\n            value: (response && response.url) || `${url.protocol}//${url.host}${url.pathname}`,\n          },\n        ];\n        const endTime = new Date().getTime();\n        const exitSpan: SpanFields = {\n          operationName: customConfig.pagePath,\n          startTime: startTime,\n          endTime,\n          spanId: segment.spans.length,\n          spanLayer: SpanLayer,\n          spanType: SpanType,\n          isError: response && (response.status === 0 || response.status >= 400), // when requests failed, the status is 0\n          parentSpanId: segment.spans.length - 1,\n          componentId: ComponentId,\n          peer: url.host,\n          tags: customConfig.detailMode\n            ? customConfig.customTags\n              ? [...tags, ...customConfig.customTags]\n              : tags\n            : undefined,\n        };\n        segment = {\n          ...segment,\n          traceId: traceId,\n          traceSegmentId: traceSegmentId,\n        };\n        segment.spans.push(exitSpan);\n        segments.push(segment);\n      }\n    } catch (e) {\n      throw e;\n    }\n    return response.clone();\n  };\n}\nexport function setFetchOptions(opt: CustomOptionsType) {\n  customConfig = { ...customConfig, ...opt };\n}\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport xhrInterceptor, { setOptions } from './interceptors/xhr';\nimport windowFetch, { setFetchOptions } from './interceptors/fetch';\nimport Report from '../services/report';\nimport { SegmentFields } from './type';\nimport { CustomOptionsType } from '../types';\n\nexport default function traceSegment(options: CustomOptionsType) {\n  const segments = [] as SegmentFields[];\n  // inject interceptor\n  xhrInterceptor(options, segments);\n  windowFetch(options, segments);\n  window.addEventListener('beforeunload', () => {\n    if (!segments.length) {\n      return;\n    }\n    new Report('SEGMENTS', options.collector).sendByBeacon(segments);\n  });\n  //report per options.traceTimeInterval min\n  setInterval(() => {\n    if (!segments.length) {\n      return;\n    }\n    new Report('SEGMENTS', options.collector).sendByXhr(segments);\n    segments.splice(0, segments.length);\n  }, options.traceTimeInterval);\n}\n\nexport function setConfig(opt: CustomOptionsType) {\n  setOptions(opt);\n  setFetchOptions(opt);\n}\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CustomOptionsType, CustomReportOptions, TagOption } from './types';\nimport { JSErrors, PromiseErrors, AjaxErrors, ResourceErrors, VueErrors, FrameErrors } from './errors/index';\nimport tracePerf from './performance/index';\nimport traceSegment, { setConfig } from './trace/segment';\n\nconst ClientMonitor = {\n  customOptions: {\n    collector: location.origin, // report serve\n    jsErrors: true, // vue, js and promise errors\n    apiErrors: true,\n    resourceErrors: true,\n    autoTracePerf: true, // trace performance detail\n    useFmp: false, // use first meaningful paint\n    enableSPA: false,\n    traceSDKInternal: false,\n    detailMode: true,\n    noTraceOrigins: [],\n    traceTimeInterval: 60000, // 1min\n  } as CustomOptionsType,\n\n  register(configs: CustomOptionsType) {\n    this.customOptions = {\n      ...this.customOptions,\n      ...configs,\n    };\n    this.validateOptions();\n    this.catchErrors(this.customOptions);\n    if (!this.customOptions.enableSPA) {\n      this.performance(this.customOptions);\n    }\n\n    traceSegment(this.customOptions);\n  },\n  performance(configs: any) {\n    // trace and report perf data and pv to serve when page loaded\n    if (document.readyState === 'complete') {\n      tracePerf.getPerf(configs);\n    } else {\n      window.addEventListener(\n        'load',\n        () => {\n          tracePerf.getPerf(configs);\n        },\n        false,\n      );\n    }\n  },\n\n  catchErrors(options: CustomOptionsType) {\n    const { service, pagePath, serviceVersion, collector } = options;\n\n    if (options.jsErrors) {\n      JSErrors.handleErrors({ service, pagePath, serviceVersion, collector });\n      PromiseErrors.handleErrors({ service, pagePath, serviceVersion, collector });\n      if (options.vue) {\n        VueErrors.handleErrors({ service, pagePath, serviceVersion, collector }, options.vue);\n      }\n    }\n    if (options.apiErrors) {\n      AjaxErrors.handleError({ service, pagePath, serviceVersion, collector });\n    }\n    if (options.resourceErrors) {\n      ResourceErrors.handleErrors({ service, pagePath, serviceVersion, collector });\n    }\n  },\n  setPerformance(configs: CustomReportOptions) {\n    // history router\n    this.customOptions = {\n      ...this.customOptions,\n      ...configs,\n      useFmp: false,\n    };\n    this.validateOptions();\n    this.performance(this.customOptions);\n    const { service, pagePath, serviceVersion, collector } = this.customOptions;\n    if (this.customOptions.jsErrors) {\n      JSErrors.setOptions({ service, pagePath, serviceVersion, collector });\n      PromiseErrors.setOptions({ service, pagePath, serviceVersion, collector });\n      if (this.customOptions.vue) {\n        VueErrors.setOptions({ service, pagePath, serviceVersion, collector });\n      }\n    }\n    if (this.customOptions.apiErrors) {\n      AjaxErrors.setOptions({ service, pagePath, serviceVersion, collector });\n    }\n    if (this.customOptions.resourceErrors) {\n      ResourceErrors.setOptions({ service, pagePath, serviceVersion, collector });\n    }\n    setConfig(this.customOptions);\n  },\n  reportFrameErrors(configs: CustomReportOptions, error: Error) {\n    FrameErrors.handleErrors(configs, error);\n  },\n  validateTags(customTags?: TagOption[]) {\n    if (!customTags) {\n      return false;\n    }\n    if (!Array.isArray(customTags)) {\n      this.customOptions.customTags = undefined;\n      console.error('customTags error');\n      return false;\n    }\n    let isTags = true;\n    for (const ele of customTags) {\n      if (!(ele && ele.key && ele.value)) {\n        isTags = false;\n      }\n    }\n    if (!isTags) {\n      this.customOptions.customTags = undefined;\n      console.error('customTags error');\n      return false;\n    }\n    return true;\n  },\n  validateOptions() {\n    const {\n      collector,\n      service,\n      pagePath,\n      serviceVersion,\n      jsErrors,\n      apiErrors,\n      resourceErrors,\n      autoTracePerf,\n      useFmp,\n      enableSPA,\n      traceSDKInternal,\n      detailMode,\n      noTraceOrigins,\n      traceTimeInterval,\n      customTags,\n      vue,\n    } = this.customOptions;\n    this.validateTags(customTags);\n    if (typeof collector !== 'string') {\n      this.customOptions.collector = location.origin;\n    }\n    if (typeof service !== 'string') {\n      this.customOptions.service = '';\n    }\n    if (typeof pagePath !== 'string') {\n      this.customOptions.pagePath = '';\n    }\n    if (typeof serviceVersion !== 'string') {\n      this.customOptions.serviceVersion = '';\n    }\n    if (typeof jsErrors !== 'boolean') {\n      this.customOptions.jsErrors = true;\n    }\n    if (typeof apiErrors !== 'boolean') {\n      this.customOptions.apiErrors = true;\n    }\n    if (typeof resourceErrors !== 'boolean') {\n      this.customOptions.resourceErrors = true;\n    }\n    if (typeof autoTracePerf !== 'boolean') {\n      this.customOptions.autoTracePerf = true;\n    }\n    if (typeof useFmp !== 'boolean') {\n      this.customOptions.useFmp = false;\n    }\n    if (typeof enableSPA !== 'boolean') {\n      this.customOptions.enableSPA = false;\n    }\n    if (typeof traceSDKInternal !== 'boolean') {\n      this.customOptions.traceSDKInternal = false;\n    }\n    if (typeof detailMode !== 'boolean') {\n      this.customOptions.detailMode = true;\n    }\n    if (typeof detailMode !== 'boolean') {\n      this.customOptions.detailMode = true;\n    }\n    if (!Array.isArray(noTraceOrigins)) {\n      this.customOptions.noTraceOrigins = [];\n    }\n    if (typeof traceTimeInterval !== 'number') {\n      this.customOptions.traceTimeInterval = 60000;\n    }\n    if (typeof vue !== 'function') {\n      this.customOptions.vue = undefined;\n    }\n  },\n  setCustomTags(tags: TagOption[]) {\n    const opt = { ...this.customOptions, customTags: tags };\n    if (this.validateTags(tags)) {\n      setConfig(opt);\n    }\n  },\n};\n\nexport default ClientMonitor;\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ClientMonitor from './monitor';\n\n(window as any).ClientMonitor = ClientMonitor;\n\nexport default ClientMonitor;\n", "/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport './lib/index';\n\nexport default ClientMonitor;\n"],
  "mappings": "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",
  "names": ["uuid", "replace", "c", "r", "Math", "random", "toString", "ErrorsCategory", "GradeTypeEnum", "ReportTypes", "t", "ReadyStatus", "SpanLayer", "SpanType", "ComponentId", "type", "collector", "url", "this", "ERROR", "ERRORS", "SEGMENT", "SEGMENTS", "PERF", "sendByFetch", "data", "sendRequest", "Request", "method", "body", "JSON", "stringify", "fetch", "then", "response", "status", "Error", "catch", "error", "console", "sendByXhr", "xhr", "XMLHttpRequest", "open", "setRequestHeader", "onreadystatechange", "readyState", "log", "send", "sendByBeacon", "navigator", "sendBeacon", "queues", "addTask", "push", "fireTasks", "length", "finallyFireTasks", "window", "addEventListener", "interval", "pageHasjsError", "logInfo", "uniqueId", "service", "serviceVersion", "pagePath", "category", "UNKNOWN_ERROR", "grade", "INFO", "errorUrl", "line", "col", "message", "firstReportedError", "traceInfo", "ExcludeErrorTypes", "AJAX_ERROR", "RESOURCE_ERROR", "location", "href", "includes", "setInterval", "e", "n", "o", "infoOpt", "handleErrors", "options", "onerror", "JS_ERROR", "s", "i", "stack", "setOptions", "opt", "event", "reason", "config", "PROMISE_ERROR", "handleError", "detail", "getRequestConfig", "statusText", "responseText", "target", "HTMLScriptElement", "HTMLLinkElement", "HTMLImageElement", "tagName", "WARNING", "src", "Vue", "errorHandler", "vm", "info", "VUE_ERROR", "name", "origin", "getPerfTiming", "timing", "performance", "PerformanceNavigationTiming", "nt2Timing", "getEntriesByType", "redirectTime", "navigationStart", "parseInt", "String", "fetchStart", "redirectEnd", "redirectStart", "dnsTime", "domainLookupEnd", "domainLookupStart", "ttfbTime", "responseStart", "requestStart", "tcpTime", "connectEnd", "connectStart", "transTime", "responseEnd", "domAnalysisTime", "domInteractive", "fptTime", "domReadyTime", "domContentLoadedEventEnd", "loadPageTime", "loadEventStart", "resTime", "sslTime", "protocol", "secureConnectionStart", "ttlTime", "firstPackTime", "fmpTime", "ELE_WEIGHT", "getStyle", "element", "attr", "getComputedStyle", "currentStyle", "START_TIME", "now", "IGNORE_TAG_SET", "WW", "innerWidth", "WH", "innerHeight", "statusCollector", "flag", "observer", "callbackCount", "entries", "getEntries", "initObserver", "getFirstSnapShot", "time", "$body", "document", "setTag", "MutationObserver", "observe", "childList", "subtree", "calculateFinalScore", "checkNeedCancel", "disconnect", "tp", "getTreeScore", "dpss", "item", "st", "forEach", "resultEls", "filterResult", "els", "fmpTiming", "getFmpTime", "setTimeout", "rt", "weight", "index", "ele", "getAttribute", "match", "poster", "sum", "avg", "filter", "start", "lastCalTime", "node", "children", "child", "calcaulteGrades", "getBoundingClientRect", "width", "height", "left", "top", "isInViewPort", "sdp", "Number", "IMG", "l", "u", "root", "areaPercent", "calculateAreaParent", "g", "d", "concat", "p", "f", "right", "bottom", "winRight", "winBottom", "overlapX", "max", "min", "overlapY", "indexOf", "$children", "$child", "a", "setAttribute", "perfConfig", "perfDetail", "getPerf", "recordPerf", "enableSPA", "fmp", "undefined", "autoTracePerf", "useFmp", "perfInfo", "clearPerf", "clearResourceTimings", "_hasbtoa", "btoa", "_hasBuffer", "Buffer", "_TE", "TextDecoder", "TextEncoder", "b64chs", "Array", "prototype", "slice", "call", "_fromCC", "tab", "fromCharCode", "bind", "_mkUriSafe", "Uint8Array", "from", "m0", "_btoa", "bin", "u32", "c0", "c1", "c2", "asc", "pad", "charCodeAt", "TypeError", "substring", "_fromUint8Array", "u8a", "strs", "apply", "subarray", "join", "cb_utob", "cc", "re_utob", "_encode", "encode", "urlsafe", "customConfig", "xhrInterceptor", "segments", "originalXHR", "xhrSend", "xhrOpen", "liveXHR", "ajaxEventTrigger", "async", "username", "password", "arguments", "segCollector", "segment", "traceId", "spans", "serviceInstance", "traceSegmentId", "xhrState", "startsWith", "URL", "pathname", "noTraceOrigins", "some", "rule", "RegExp", "test", "cURL", "traceSDKInternal", "OPENED", "startTime", "Date", "getTime", "v", "traceIdStr", "segmentId", "instance", "endpoint", "peer", "host", "values", "DONE", "endTime", "responseURL", "tags", "key", "value", "exitSpan", "operationName", "T", "spanId", "spanLayer", "spanType", "isError", "parentSpanId", "componentId", "detailMode", "customTags", "splice", "ajaxEvent", "CustomEvent", "dispatchEvent", "setFetchOptions", "setConfig", "customOptions", "jsErrors", "apiErrors", "resourceErrors", "traceTimeInterval", "register", "configs", "validateOptions", "catchErrors", "originFetch", "h", "y", "m", "O", "E", "w", "R", "S", "b", "I", "P", "x", "_", "C", "A", "N", "j", "k", "L", "Object", "args", "internals", "isSDKInternal", "hasTrace", "headers", "clone", "vue", "setPerformance", "reportFrameErrors", "validateTags", "isArray", "isTags", "setCustomTags", "ClientMonitor"]
}
